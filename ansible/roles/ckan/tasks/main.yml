---

# TODO: Redis and Supervisor should be separated

- name: Ensure CKAN common packages
  action: apt pkg="{{ item }}" state=latest
  with_items:
    - redis-server
    - python-pip
    - supervisor
  tags:
  - packages
  - ckan

- name: Ensure CKAN deb packages
  action: apt pkg="{{ item }}" state=latest
  with_items:
    - apache2
    - libapache2-mod-wsgi
  tags:
  - apache
  - packages
  - ckan

- name: Download CKAN package
  get_url: url="http://packaging.ckan.org/{{ ckan_package }}" dest="{{ cache_path }}/{{ ckan_package }}"
  register: download_ckan_package
  tags:
  - ckan

- name: Install CKAN package
  command: dpkg -i "{{ cache_path }}/{{ ckan_package }}"
  when: download_ckan_package|changed
  tags:
  - ckan

# fixGroupView is fixed in ckan 2.3 https://github.com/ckan/ckan/issues/1420
# downgradeSelect2js fixes ckan issue https://github.com/ckan/ckan/issues/1512
- name: Fetch CKAN patches
  command: wget {{ item.patch }} -O {{ cache_path }}/{{ item.file }}
  with_items:
    - { patch: "https://github.com/ckan/ckan/commit/770df34be2a487b4f3b81286987cd38e74c9ebf8.patch", file: fix_group_view.patch }
    - { patch: "https://github.com/ckan/ckan/commit/6f77aea762cdbc4d66ad70af0b2f1524a3a64218.patch", file: "fix_multilingual.patch" }
    - { patch: "https://github.com/yhteentoimivuuspalvelut/ckan/commit/0791caace461315d2cbffbcbf551ef878f23f76c.patch", file: fix_hardcoded_languages.patch}
    - { patch: "https://github.com/yhteentoimivuuspalvelut/ckan/commit/9b89870cd13504e3e21465079625d405eab563f9.patch", file: downgrade_select2js.patch}
  tags:
  - ckan
  - patch_ckan

# fixGroupView is fixed in ckan 2.3 https://github.com/ckan/ckan/issues/1420
# downgradeSelect2js fixes ckan issue https://github.com/ckan/ckan/issues/1512
- name: Apply CKAN patches
  shell: patch -s -N -p1 < {{ cache_path }}/{{ item.patch }} chdir="{{ item.dir }}"
  ignore_errors: True
  with_items:
    - { patch: "fix_group_view.patch", dir: "{{ virtual_environment }}/src/ckan" }
    - { patch: "fix_multilingual.patch", dir: "{{ virtual_environment }}/src/ckan" }
    - { patch: "fix_hardcoded_languages.patch", dir: "{{ virtual_environment }}/src/ckan" }
    - { patch: downgrade_select2js.patch, dir: "{{ virtual_environment }}/src/ckan" }
  tags:
  - ckan
  - patch_ckan

- name: Create CKAN files path
  file: path="{{ ckan_files_path }}" state=directory mode=0770 owner="{{ www_user }}" group="{{ www_group }}"
  tags:
  - ckan

- name: Ensure path ownerships
  command: chown -R "{{ www_user }}:{{ www_group }}" "{{ ckan_files_path }}" /etc/ckan/default
  tags:
  - ckan

- name: Ensure clerybeat pid ownership
  command: chown "{{ www_user }}:{{ www_group }}" /tmp/celerybeat_pid /tmp/celerybeat_schedule
  ignore_errors: True
  tags:
  - ckan

- name: Ensure upload path mode
  command: chmod -R "0770" "{{ ckan_files_path }}" 
  tags:
  - ckan

- name: Disable Nginx sites
  file: path="/etc/nginx/sites-enabled/{{ item }}" state=absent
  with_items:
    - ckan
    - default
  tags:
  - nginx
  - ckan
  notify: Restart Nginx

- name: Disable Apache sites
  file: path="/etc/apache2/sites-enabled/{{ item }}" state=absent
  with_items:
    - default
    - default-ssl
    - ckan_default
  tags:
  - apache
  - ckan

- name: Copy Apache configuration
  template: src=apache2.j2 dest=/etc/apache2/sites-available/ytp mode=0644 owner=root group=root
  tags:
  - apache
  - ckan

- name: Enable Apache configuration
  file: src=/etc/apache2/sites-available/ytp dest=/etc/apache2/sites-enabled/ytp state=link owner=root group=root
  notify: Restart Apache
  tags:
  - apache
  - ckan

- name: Setup CKAN configuration
  template: src="ckan.ini.j2" dest="{{ ckan_ini }}" mode=0640 owner=root group="{{ www_group }}"
  tags:
  - ckan

- name: Ensure spatial requirements
  apt: pkg="{{ item }}" state=present
  register: postgis_installed
  with_items:
    - postgresql-9.1-postgis
    - python-dev 
    - libxslt1-dev
    - libgeos-c1
  tags:
  - packages
  - ckan
  - spatial

- name: Spatial table references
  command: sudo -u postgres psql -d "{{ ckan_database_name }}" -f "{{ item }}"
  when: postgis_installed|changed
  with_items:
    - "/usr/share/postgresql/9.1/contrib/postgis-1.5/postgis.sql"
    - "/usr/share/postgresql/9.1/contrib/postgis-1.5/spatial_ref_sys.sql"
  tags:
  - ckan
  - spatial

- name: Spatial table rigths
  command: sudo -u postgres psql -d "{{ ckan_database_username }}" -c "{{ item }}"
  when: postgis_installed|changed
  with_items:
    - "ALTER TABLE spatial_ref_sys OWNER TO {{ ckan_database_username }};"
    - "ALTER TABLE geometry_columns OWNER TO {{ ckan_database_username }};"
  tags:
  - ckan
  - spatial

- name: Create debian cache path
  file: path="{{ cache_path }}/debian" state=directory
  tags:
  - ckan
  - spatial
  - packages

- name: Copy libxml2-2.9 packages
  copy: src="{{ item }}" dest="{{ cache_path }}/debian/{{ item }}" mode=0644 owner=root group=root
  register: copy_libxml2
  with_items:
    - "libxml2_2.9.1+dfsg1-3_amd64.deb"
    - "libxml2-dev_2.9.1+dfsg1-3_amd64.deb"
  tags:
  - packages
  - ckan
  - spatial

- name: Install libxml2-2.9 packages
  command: dpkg -i "{{ cache_path }}/debian/{{ item }}"
  when: copy_libxml2|changed
  with_items:
    - "libxml2_2.9.1+dfsg1-3_amd64.deb"
    - "libxml2-dev_2.9.1+dfsg1-3_amd64.deb"
  tags:
  - packages
  - ckan
  - spatial

- name: Copy requirements file
  template: src=requirements.txt.j2 dest="{{ cache_path }}/requirements.txt" mode=0644 owner=root group=root
  tags:
  - ckan
  - spatial

- name: Install requirements
  pip: requirements="{{ cache_path }}/requirements.txt" virtualenv="{{ virtual_environment }}" state=latest extra_args='--exists-action=w'
  tags:
  - ckan
  - spatial

- name: Install spatial requirements
  pip: requirements="{{ virtual_environment }}/src/ckanext-spatial/pip-requirements.txt" virtualenv="{{ virtual_environment }}" state=latest extra_args='--exists-action=w'
  tags:
  - ckan
  - spatial

- name: Ensure SqlAlchemy version
  pip: name="sqlalchemy" virtualenv="{{ virtual_environment }}" version="0.7.10" extra_args='--exists-action=w'
  tags:
  - ckan
  - spatial

- name: Install modules
  pip: name="{{ cache_path }}/{{ item }}" virtualenv="{{ virtual_environment }}" state=latest
  when: modules_copy|changed
  register: modules_install
  with_flattened:
    - ckan_extensions
  tags:
  - ckan
  - modules

# Background services can block database update
- name: Stop supervisor services
  command: supervisorctl stop all
  tags:
  - ckan

- name: Initialize CKAN database
  shell: ckan db init
  tags:
  - ckan

- name: Upgrade CKAN database
  shell: ckan db upgrade
  tags:
  - ckan

- name: Upgrade CKAN filestore
  shell: ./bin/paster --plugin=ckan db migrate-filestore "--config={{ ckan_ini }}" chdir="{{ virtual_environment }}"
  tags:
  - ckan

- name: Initialize Harvester database
  shell: ./bin/paster --plugin=ckanext-harvest harvester initdb "--config={{ ckan_ini }}" chdir="{{ virtual_environment }}"
  tags:
  - ckan

- name: Initialize task database
  shell: ./bin/paster --plugin=ckanext-ytp-tasks ytp-tasks-initialize-database "--config={{ ckan_ini }}" chdir="{{ virtual_environment }}"
  tags:
  - ckan

- name: Initialize spatial database
  shell: ./bin/paster --plugin=ckanext-spatial spatial initdb "--config={{ ckan_ini }}" chdir="{{ virtual_environment }}"
  tags:
  - ckan

- name: Create initial CKAN users
  shell: ./bin/paster --plugin=ckan user add "{{ item.username }}" "password={{ item.password }}" "email={{ item.email }}" "--config={{ ckan_ini }}" chdir={{ virtual_environment }}
  ignore_errors: True
  with_items:
  - { username: "{{ harvest_username }}", password: "{{ harvest_password }}", email: "{{ harvest_email }}" }
  - { username: "{{ drupal_admin_username }}", password: "{{ drupal_admin_password }}", email: "{{ drupal_admin_email }}" }
  - { username: "{{ drupal_default_editor_username }}", password: "{{ drupal_default_editor_password }}", email: "{{ drupal_default_editor_email }}" }
  tags:
  - ckan

- name: Add CKAN sysadmins
  shell: ./bin/paster --plugin=ckan sysadmin add "{{ item }}" --config="{{ ckan_ini }}" chdir="{{ virtual_environment }}"
  ignore_errors: True
  with_items:
  - "{{ harvest_username }}"
  - "{{ drupal_admin_username }}"
  - "{{ drupal_default_editor_username }}"
  tags:
  - ckan
  
- name: Copy License register
  copy: src="license.json" dest="{{ ckan_files_path }}/license.json" mode=0644 owner=root group=ckan
  tags:
  - ckan

- name: Create translation cache path
  file: path="{{ translation_cache_path }}" state=directory
  tags:
  - translations
  - ckan

- name: Copy CKAN translations
  copy: src="i18n/{{ item }}/LC_MESSAGES/ckan.po" dest="{{ translation_cache_path }}/ckan-{{ ckan_version }}.{{ item }}.po"
  register: ckan_translations
  with_items: translation_languages
  tags:
  - translations
  - ckan

- name: Create temporary translation files
  command: cp "{{ translation_cache_path }}/ckan-{{ ckan_version }}.{{ item }}.po" "{{ translation_cache_path }}/ckan.{{ item }}.temporary.po"
  with_items: translation_languages
  when: ckan_translations|changed or modules_copy|changed
  tags:
  - translations
  - ckan

- name: Join translation source files
  command: msgcat "{{ cache_path }}/{{ item[0] }}/i18n/{{ item[1] }}/LC_MESSAGES/{{ item[0] }}.po" "{{ translation_cache_path }}/ckan.{{ item[1] }}.temporary.po" --use-first -o "{{ translation_cache_path }}/ckan.{{ item[1] }}.temporary.po"
  with_nested:
    - translation_projects
    - translation_languages
  when: ckan_translations|changed or modules_copy|changed
  tags:
  - translations
  - ckan

- name: Overwrite translation files
  command: cp "{{ translation_cache_path }}/ckan.{{ item }}.temporary.po" "{{ virtual_environment }}/src/ckan/ckan/i18n/{{ item }}/LC_MESSAGES/ckan.po"
  with_items: translation_languages
  when: ckan_translations|changed or modules_copy|changed
  tags:
  - translations
  - ckan

- name: Compile translation files
  command: msgfmt "{{ virtual_environment }}/src/ckan/ckan/i18n/{{ item }}/LC_MESSAGES/ckan.po" -o "{{ virtual_environment }}/src/ckan/ckan/i18n/{{ item }}/LC_MESSAGES/ckan.mo"
  with_items: translation_languages
  when: ckan_translations|changed or modules_copy|changed
  tags:
  - translations
  - ckan
  notify: Restart Apache

- name: Add facet translations
  command: /usr/lib/ckan/default/bin/paster --plugin=ckanext-ytp-dataset ytp-facet-translations "{{ cache_path }}/ckanext-ytp-dataset/i18n" -c /etc/ckan/default/production.ini
  when: modules_copy|changed
  tags:
  - translations
  - ckan

- name: Ensure Apache restart
  service: name=apache2 state=restarted
  tags:
  - apache
  - ckan

- name: Ensure Nginx is restarted
  service: name=nginx state=restarted
  tags:
  - ckan

- name: Copy celery configuration
  template: src="../modules/ckanext-ytp-tasks/ytp_celery.py.j2" dest="/etc/ckan/default/ytp_celery.py" mode=0640 owner=root group=ckan
  tags:
  - ckan

- name: Copy supervisor configuration
  template: src="supervisor.conf.j2" dest="/etc/supervisor/conf.d/ytp.conf" mode=0644 owner=root group=root
  register: supervisor_configuration
  notify:
  - Restart Gather
  - Restart Fetch
  tags:
  - ckan

- name: Reread supervisor
  shell: supervisorctl reread
  when: supervisor_configuration|changed
  tags:
  - ckan

- name: Ensure supervisor services
  shell: supervisorctl add {{ item }}
  when: supervisor_configuration|changed
  with_flattened:
    - supervisor_services
  tags:
  - ckan

- name: Ensure supervisor services are restarted
  supervisorctl: name={{ item }} state=restarted
  when: supervisor_configuration|changed or modules_install|changed
  with_flattened:
    - supervisor_services

- name: Ensure supervisor services are started
  supervisorctl: name={{ item }} state=started
  with_flattened:
    - supervisor_services

- name: Ensure harvester cron job
  cron: name="harvest" minute="*/5" job="{{ virtual_environment }}/bin/paster --plugin=ckanext-harvest harvester run --config={{ ckan_ini }}"
  tags:
  - ckan
