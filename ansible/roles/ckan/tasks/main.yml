---
### System tasks ###

# TODO: Maintenance mode should not block installation tasks that use CKAN API
#- name: Set server to maintenance
#  file: path="/var/www/maintenance" state=touch mode=0644 owner=root group=root
#  register: maintenance
#  tags:
#  - maintenance

# TODO: Redis, Supervisor and Jetty should be separated

- name: Ensure CKAN common packages
  action: apt pkg="{{ item }}" state=latest
  with_items:
    - solr-jetty
    - openjdk-7-jdk
    - redis-server
    - python-pip
    - supervisor
  tags:
  - packages
  - ckan
  - jetty

- name: Ensure CKAN deb packages
  action: apt pkg="{{ item }}" state=latest
  with_items:
    - apache2
    - libapache2-mod-wsgi
  tags:
  - apache
  - packages
  - ckan

- name: Create ckan group
  group: name={{ ckan_group }} state=present system=yes
  tags:
  - ckan

- name: Create ckan user
  user: name="{{ ckan_user }}" state=present group="{{ ckan_group }}" groups="{{ www_group }}" system=yes shell=/usr/sbin/nologin home="{{ server_path }}"
  tags:
  - ckan

- name: Download CKAN package
  get_url: url="http://packaging.ckan.org/{{ ckan_package }}" dest="{{ cache_path }}/{{ ckan_package }}"
  tags:
  - ckan

- name: Install CKAN package
  command: dpkg -i "{{ cache_path }}/{{ ckan_package }}" creates=/usr/lib/ckan/default/
  tags:
  - ckan

- name: Disable Nginx sites
  file: path="/etc/nginx/sites-enabled/{{ item }}" state=absent
  with_items:
    - ckan
    - default
  tags:
  - nginx
  - ckan
  notify: Restart Nginx

- name: Disable Apache sites
  file: path="/etc/apache2/sites-enabled/{{ item }}" state=absent
  with_items:
    - default
    - default-ssl
    - ckan_default
  tags:
  - apache
  - ckan

- name: Copy Apache configuration
  template: src=apache2.j2 dest=/etc/apache2/sites-available/ytp mode=0644 owner=root group=root
  tags:
  - apache
  - ckan

- name: Enable Apache configuration
  file: src=/etc/apache2/sites-available/ytp dest=/etc/apache2/sites-enabled/ytp state=link owner=root group=root
  notify: Restart Apache
  tags:
  - apache
  - ckan

- name: Remove old schema
  file: path=/etc/solr/conf/schema.xml state=absent
  tags:
  - ckan

- name: Setup Solr schema
  file: src="{{ virtual_environment }}/src/ckan/ckan/config/solr/schema-2.0.xml" dest=/etc/solr/conf/schema.xml state=link
  tags:
  - ckan

- name: Setup Jetty
  template: src=jetty.j2 dest=/etc/default/jetty mode=0644 owner=root group=root
  notify: Restart Jetty
  register: jetty_setup
  tags:
  - ckan
  - jetty

- name: Ensure Jetty is restarted
  service: name=jetty state=restarted
  when: jetty_setup|changed
  tags:
  - ckan
  - jetty

- name: Ensure Jetty is running
  service: name=jetty state=started
  tags:
  - ckan
  - jetty
 
- name: Setup CKAN configuration
  template: src="ckan.ini.j2" dest="{{ ckan_ini }}" mode=0640 owner=root group="{{ www_group }}"
  tags:
  - ckan

- name: Copy requirements file
  template: src=requirements.txt.j2 dest="{{ cache_path }}/requirements.txt" mode=0644 owner=root group=root
  tags:
  - ckan

- name: Install requirements
  pip: requirements="{{ cache_path }}/requirements.txt" virtualenv="{{ virtual_environment }}" state=present
  tags:
  - ckan

- name: Install modules
  pip: name="{{ cache_path }}/{{ item }}" virtualenv="{{ virtual_environment }}" state=latest
  when: modules_copy|changed
  register: modules_install
  with_flattened:
    - ckan_extensions
  tags:
  - ckan
  - modules

- name: Initialize CKAN database
  shell: ckan db init
  tags:
  - ckan

- name: Initialize Harvester database
  shell: ./bin/paster --plugin=ckanext-harvest harvester initdb "--config={{ ckan_ini }}" chdir="{{ virtual_environment }}"
  tags:
  - ckan

- name: Initialize task database
  shell: ./bin/paster --plugin=ckanext-ytp-tasks ytp-tasks-initialize-database "--config={{ ckan_ini }}" chdir="{{ virtual_environment }}"
  tags:
  - ckan

- name: Create initial CKAN users
  shell: ./bin/paster --plugin=ckan user add "{{ item.username }}" "password={{ item.password }}" "email={{ item.email }}" "--config={{ ckan_ini }}" chdir={{ virtual_environment }}
  ignore_errors: True
  with_items:
  - { username: "{{ harvest_username }}", password: "{{ harvest_password }}", email: "{{ harvest_email }}" }
  - { username: "{{ drupal_admin_username }}", password: "{{ drupal_admin_password }}", email: "{{ drupal_admin_email }}" }
  - { username: "{{ drupal_default_editor_username }}", password: "{{ drupal_default_editor_password }}", email: "{{ drupal_default_editor_email }}" }
  tags:
  - ckan

- name: Add CKAN sysadmins
  shell: ./bin/paster --plugin=ckan sysadmin add "{{ item }}" --config="{{ ckan_ini }}" chdir="{{ virtual_environment }}"
  ignore_errors: True
  with_items:
  - "{{ harvest_username }}"
  - "{{ drupal_admin_username }}"
  - "{{ drupal_default_editor_username }}"
  tags:
  - ckan

- name: Copy translation files
  copy: src="i18n/{{ item }}.po" dest="{{ cache_path }}/{{ item }}.po"
  with_items:
  - fi
  - sv
  register: translations
  tags:
  - translations
  - ckan

- name: Fetch CKAN translations
  get_url: url="https://raw.github.com/okfn/ckan/ckan-{{ ckan_version }}/ckan/i18n/{{ item }}/LC_MESSAGES/ckan.po" dest="{{ cache_path }}/ckan.{{ item }}.po"
  with_items:
  - fi
  - sv
  tags:
  - translations
  - ckan

- name: Join translation source files (assets)
  command: msgcat {{ cache_path }}/ytp-assets-common/i18n/{{ item }}.po {{ cache_path }}/ckan.{{ item }}.po --use-first -o {{ cache_path }}/ckan.{{ item }}.temporary.po
  with_items:
  - fi
  - sv
  when: translations|changed or modules_copy|changed
  tags:
  - translations
  - ckan

- name: Join translation source files (custom)
  command: msgcat {{ cache_path }}/{{ item }}.po {{ cache_path }}/ckan.{{ item }}.temporary.po --use-first -o {{ virtual_environment }}/src/ckan/ckan/i18n/{{ item }}/LC_MESSAGES/ckan.po
  with_items:
  - fi
  - sv
  when: translations|changed or modules_copy|changed
  tags:
  - translations
  - ckan

- name: Compile translation files
  command: msgfmt {{ virtual_environment }}/src/ckan/ckan/i18n/{{ item }}/LC_MESSAGES/ckan.po -o {{ virtual_environment }}/src/ckan/ckan/i18n/{{ item }}/LC_MESSAGES/ckan.mo
  with_items:
  - fi
  - sv
  when: translations|changed or modules_copy|changed
  tags:
  - translations
  - ckan
  notify: Restart Apache

- name: Ensure Apache restart
  service: name=apache2 state=restarted
  tags:
  - apache
  - ckan
  
- name: Ensure Nginx is restarted
  service: name=nginx state=restarted
  tags:
  - ckan
  
- name: Copy celery configuration
  template: src="../modules/ckanext-ytp-tasks/ytp_celery.py.j2" dest="/etc/ckan/default/ytp_celery.py" mode=0640 owner=root group=ckan
  tags:
  - ckan
  - temp

- name: Copy supervisor configuration
  template: src="supervisor.conf.j2" dest="/etc/supervisor/conf.d/ytp.conf" mode=0644 owner=root group=root
  register: supervisor_configuration
  notify:
  - Restart Gather
  - Restart Fetch
  tags:
  - ckan

- name: Reread supervisor
  shell: supervisorctl reread
  when: supervisor_configuration|changed
  tags:
  - ckan

- name: Ensure supervisor services
  shell: supervisorctl add {{ item }}
  when: supervisor_configuration|changed
  with_flattened:
    - supervisor_services
  tags:
  - ckan

- name: Ensure supervisor services are restarted
  supervisorctl: name={{ item }} state=restarted
  when: supervisor_configuration|changed or modules_install|changed
  with_flattened:
    - supervisor_services

- name: Ensure supervisor services are started
  supervisorctl: name={{ item }} state=started
  with_flattened:
    - supervisor_services

- name: Ensure harvester cron job
  cron: name="harvest" minute="*/5" job="{{ virtual_environment }}/bin/paster --plugin=ckanext-harvest harvester run --config={{ ckan_ini }}"
  tags:
  - ckan

#- name: Leave maintenance mode
#  file: path="/var/www/maintenance" state=absent
#  when: maintenance|success
#  tags:
#  - maintenance
