---

# TODO: Supervisor should be separated

- name: Ensure CKAN common packages
  action: apt pkg="{{ item }}" state=latest
  with_items:
    - python-pip
    - supervisor
    - python-dev 
    - libxslt1-dev
    - libgeos-c1
  tags:
  - packages
  - ckan

- name: Ensure CKAN deb packages
  action: apt pkg="{{ item }}" state=latest
  with_items:
    - apache2
    - libapache2-mod-wsgi
    - libffi-dev
  tags:
  - apache
  - packages
  - ckan

- name: Download CKAN package
  get_url: url="http://packaging.ckan.org/{{ ckan_package }}" dest="{{ cache_path }}/{{ ckan_package }}"
  register: download_ckan_package
  tags:
  - ckan

- name: Install CKAN package
  command: dpkg -i "{{ cache_path }}/{{ ckan_package }}"
  when: download_ckan_package|changed
  tags:
  - ckan

- include: patch.yml

- name: Create CKAN files path
  file: path="{{ ckan_files_path }}" state=directory mode=0770 owner="{{ www_user }}" group="{{ www_group }}"
  tags:
  - ckan

- name: Ensure path ownerships
  command: chown -R "{{ www_user }}:{{ www_group }}" "{{ ckan_files_path }}" /etc/ckan/default
  tags:
  - ckan

- name: Ensure celerybeat pid ownership
  command: chown "{{ www_user }}:{{ www_group }}" /tmp/celerybeat_pid /tmp/celerybeat_schedule
  ignore_errors: True
  tags:
  - ckan

- name: Ensure upload path mode
  command: chmod -R "0770" "{{ ckan_files_path }}" 
  tags:
  - ckan

- name: Disable Nginx sites
  file: path="/etc/nginx/sites-enabled/{{ item }}" state=absent
  with_items:
    - ckan
    - default
  tags:
  - nginx
  - ckan
  notify: Restart Nginx

- name: Disable Apache sites
  file: path="/etc/apache2/sites-enabled/{{ item }}" state=absent
  with_items:
    - default
    - default-ssl
    - ckan_default
  tags:
  - apache
  - ckan

- name: Copy ports configuration
  template: src=ports.conf.j2 dest=/etc/apache2/ports.conf mode=0644 owner=root group=root
  tags:
  - apache
  - ckan

- name: Copy Apache configuration
  template: src=apache2.j2 dest=/etc/apache2/sites-available/ytp mode=0644 owner=root group=root
  tags:
  - apache
  - ckan

- name: Enable Apache configuration
  file: src=/etc/apache2/sites-available/ytp dest=/etc/apache2/sites-enabled/ytp state=link owner=root group=root
  notify: Restart Apache
  tags:
  - apache
  - ckan

- name: Enable SSL configuration
  command: a2enmod ssl
  tags:
  - apache
  - ckan

- name: Setup CKAN configuration
  template: src="ckan.ini.j2" dest="{{ ckan_ini }}" mode=0640 owner=root group="{{ www_group }}"
  register: ckan_configuration
  tags:
  - ckan

- name: Create debian cache path
  file: path="{{ cache_path }}/debian" state=directory
  tags:
  - ckan
  - spatial
  - packages

- name: Copy libxml2-2.9 packages
  copy: src="{{ item }}" dest="{{ cache_path }}/debian/{{ item }}" mode=0644 owner=root group=root
  register: copy_libxml2
  with_items:
    - "libxml2_2.9.1+dfsg1-3_amd64.deb"
    - "libxml2-dev_2.9.1+dfsg1-3_amd64.deb"
  tags:
  - packages
  - ckan
  - spatial

- name: Install libxml2-2.9 packages
  command: dpkg -i "{{ cache_path }}/debian/{{ item }}"
  when: copy_libxml2|changed
  with_items:
    - "libxml2_2.9.1+dfsg1-3_amd64.deb"
    - "libxml2-dev_2.9.1+dfsg1-3_amd64.deb"
  tags:
  - packages
  - ckan
  - spatial

- name: Copy requirements file
  template: src=requirements.txt.j2 dest="{{ cache_path }}/requirements.txt" mode=0644 owner=root group=root
  tags:
  - ckan
  - spatial

- name: Install requirements
  pip: requirements="{{ cache_path }}/requirements.txt" virtualenv="{{ virtual_environment }}" state=latest extra_args='--exists-action=w'
  tags:
  - ckan
  - spatial

- name: Install spatial requirements
  pip: requirements="{{ virtual_environment }}/src/ckanext-spatial/pip-requirements.txt" virtualenv="{{ virtual_environment }}" state=latest extra_args='--exists-action=w'
  tags:
  - ckan
  - spatial

- name: Install archiver requirements
  pip: requirements="{{ virtual_environment }}/src/ckanext-archiver/pip-requirements.txt" virtualenv="{{ virtual_environment }}" state=latest extra_args='--exists-action=w'
  tags:
  - ckan
  - qa

- name: Install qa requirements
  pip: requirements="{{ virtual_environment }}/src/ckanext-qa/pip-requirements.txt" virtualenv="{{ virtual_environment }}" state=latest extra_args='--exists-action=w'
  tags:
  - ckan
  - qa

- name: Install python package to support SNI in requests
  pip: name=ndg-httpsclient virtualenv="{{ virtual_environment }}"
  tags:
  - ckan
  - qa

- name: Install modules
  pip: name="{{ cache_path }}/{{ item }}" virtualenv="{{ virtual_environment }}" state=latest
  when: modules_copy|changed
  register: modules_install
  with_flattened:
    - ckan_extensions
  tags:
  - ckan
  - modules

- name: Ensure SqlAlchemy version
  pip: name="sqlalchemy" virtualenv="{{ virtual_environment }}" version="0.7.10" extra_args='--exists-action=w --upgrade --force-reinstall'
  tags:
  - ckan
  - spatial

# Background services can block database update
- name: Stop supervisor services
  command: supervisorctl stop all
  tags:
  - ckan

- name: Initialize CKAN database
  shell: ckan db init
  tags:
  - ckan

- name: Upgrade CKAN database
  shell: ckan db upgrade
  tags:
  - ckan

- name: Upgrade CKAN filestore
  shell: ./bin/paster --plugin=ckan db migrate-filestore "--config={{ ckan_ini }}" chdir="{{ virtual_environment }}"
  tags:
  - ckan

- name: Initialize Harvester database
  shell: ./bin/paster --plugin=ckanext-harvest harvester initdb "--config={{ ckan_ini }}" chdir="{{ virtual_environment }}"
  tags:
  - ckan

- name: Initialize task database
  shell: ./bin/paster --plugin=ckanext-ytp-tasks ytp-tasks-initialize-database "--config={{ ckan_ini }}" chdir="{{ virtual_environment }}"
  tags:
  - ckan

- name: Initialize spatial database
  shell: ./bin/paster --plugin=ckanext-spatial spatial initdb "--config={{ ckan_ini }}" chdir="{{ virtual_environment }}"
  tags:
  - ckan

- name: Initialize comment database
  shell: ./bin/paster --plugin=ckanext-ytp-comments initdb "--config={{ ckan_ini }}" chdir="{{ virtual_environment }}"
  tags:
  - ckan

- name: Create initial CKAN users
  shell: ./bin/paster --plugin=ckan user add "{{ item.username }}" "password={{ item.password }}" "email={{ item.email }}" "--config={{ ckan_ini }}" chdir={{ virtual_environment }}
  ignore_errors: True
  with_flattened:
    - ytp_users
    - harvest_user
    - admin
  tags:
  - ckan

- name: Add CKAN sysadmins
  shell: ./bin/paster --plugin=ckan sysadmin add "{{ item }}" --config="{{ ckan_ini }}" chdir="{{ virtual_environment }}"
  ignore_errors: True
  with_items: ckan_admins
  tags:
  - ckan

- name: Copy data structures for CKAN UI options
  copy: src="{{ item }}" dest="{{ ckan_files_path }}/{{ item }}" mode=0644 owner=root group="{{ www_group }}"
  register: copy_ckan_ui_data
  with_items:
    - license.json
    - service_classes.json
    - municipalities.json
    - life_situations.json
    - target_groups.json
  tags:
  - ckan

- name: Ensure reindex is launched
  file: path="{{ files_root }}/.solr-reindex" state="absent"
  when: copy_ckan_ui_data|changed
  tags:
  - ckan

- include: translations.yml

- name: re-minify CKAN javascript files
  shell: ./bin/paster --plugin=ckan minify {{ ckan_source_path }}/ckan/public/base/javascript/modules "--config={{ ckan_ini }}" chdir="{{ virtual_environment }}"
  tags:
  - ckan
  - translations

- name: Ensure Apache restart
  service: name=apache2 state=restarted
  tags:
  - apache
  - ckan

- name: Ensure Nginx is restarted
  service: name=nginx state=restarted
  tags:
  - ckan

- name: Ensure filestore path ownership
  command: chown -R "{{ www_user }}:{{ www_group }}" "{{ ckan_files_path }}"
  tags:
  - ckan

- name: Copy celery configuration
  template: src="../modules/ckanext-ytp-tasks/ytp_celery.py.j2" dest="/etc/ckan/default/ytp_celery.py" mode=0640 owner=root group="{{ www_group }}"
  tags:
  - ckan

- name: Copy supervisor configuration
  template: src="supervisor.conf.j2" dest="/etc/supervisor/conf.d/ytp.conf" mode=0644 owner=root group=root
  register: supervisor_configuration
  notify:
  - Restart Gather
  - Restart Fetch
  tags:
  - ckan

- name: Reread supervisor
  shell: supervisorctl reread
  when: supervisor_configuration|changed
  tags:
  - ckan

- name: Ensure supervisor services
  shell: supervisorctl add {{ item }}
  when: supervisor_configuration|changed
  with_flattened:
    - supervisor_services
  tags:
  - ckan

- name: Ensure supervisor services are restarted
  supervisorctl: name={{ item }} state=restarted
  when: supervisor_configuration|changed or modules_install|changed or ckan_configuration|changed
  with_flattened:
    - supervisor_services
  tags:
  - ckan

- name: Ensure supervisor services are started
  supervisorctl: name={{ item }} state=started
  with_flattened:
    - supervisor_services
  tags:
  - ckan

- name: Ensure harvester cron job
  cron: name="harvest" minute="*/5" hour="0-3" job="{{ virtual_environment }}/bin/paster --plugin=ckanext-harvest harvester run --config={{ ckan_ini }}"
  tags:
  - ckan
  - cron

- name: Ensure tracking cron job
  cron: name="tracking" minute="0" hour="0" job="{{ virtual_environment }}/bin/paster --plugin=ckan tracking update --config={{ ckan_ini }} && {{ virtual_environment }}/bin/paster --plugin=ckan search-index rebuild -r --config={{ ckan_ini }}"
  tags:
  - ckan
  - cron

- name: Ensure qa cron job
  cron: name="qa" minute="0" hour="6" job="{{ virtual_environment }}/bin/paster --plugin=ckanext-qa qa update --config={{ ckan_ini }}"
  tags:
  - ckan
  - cron

- name: Reindex
  shell: touch "{{ files_root }}/.solr-reindex" && ./bin/paster --plugin=ckan  search-index rebuild --config="{{ ckan_ini }}" chdir="{{ virtual_environment }}" creates="{{ files_root }}/.solr-reindex"
  async: 1200
  poll: 0
  tags:
  - ckan
  - non-local
