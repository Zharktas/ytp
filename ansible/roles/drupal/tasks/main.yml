---

### Drupal ###

- name: Ensure Drupal packages
  action: apt pkg="{{ item }}" state=latest
  with_items:
    - php5-pgsql
    - php5-gd
    - php5-fpm
    - php5-cli
    - php5
  tags:
  - packages
  - drupal

- name: Fetch drush package
  get_url: url="https://github.com/drush-ops/drush/archive/6.x.zip" dest="{{ cache_path }}/drush-6.x.zip"
  tags:
  - drupal

- name: Unpack drush
  command: unzip "{{ cache_path }}/drush-6.x.zip" chdir="{{ server_path }}" creates="{{ server_path }}/drush-6.x"
  tags:
  - drupal

- name: Setup drush binary link
  file: path="/usr/local/bin/drush" src="{{ server_path }}/drush-6.x/drush" state=link
  tags:
  - drupal

- name: Set PHP pathinfo
  ini_file: dest=/etc/php5/fpm/php.ini section=PHP option=cgi.fix_pathinfo value=0
  tags:
  - drupal

- name: Set PHP max file upload size
  ini_file: dest=/etc/php5/fpm/php.ini section=PHP option=upload_max_filesize value=50M
  tags:
  - drupal

- name: Set PHP max memory limit
  ini_file: dest=/etc/php5/fpm/php.ini section=PHP option=memory_limit value=200M
  tags:
  - drupal


- name: Set PHP socket (listen)
  ini_file: dest=/etc/php5/fpm/pool.d/www.conf section=www option=listen value=/tmp/phpfpm.socket
  tags:
  - drupal

# The listen.owner, listen.group, and listen.mode options are used for setting the permissions so that
# nginx does not return 502 Bad Gateway (because of permission denied)
- name: Set PHP socket (listen owner)
  ini_file: dest=/etc/php5/fpm/pool.d/www.conf section=www option=listen.owner value={{ www_user }}
  tags:
  - drupal

- name: Set PHP socket (listen group)
  ini_file: dest=/etc/php5/fpm/pool.d/www.conf section=www option=listen.group value={{ www_group }}
  tags:
  - drupal

- name: Set PHP socket (listen mode)
  ini_file: dest=/etc/php5/fpm/pool.d/www.conf section=www option=listen.mode value=0660
  tags:
  - drupal

# required by drush
- name: Create root pgpass
  template: src=pgpass.j2 dest=/root/.pgpass mode="0600" owner=root group=root
  tags:
  - drupal

- name: Create Drupal installation script
  template: src=install-drupal.sh.j2 dest="{{ cache_path }}/install-drupal.sh" mode="0700" owner=root group=root
  register: drupal_script
  tags:
  - drupal

- name: Install Drupal
  command: ./install-drupal.sh chdir="{{ cache_path }}"
  when: drupal_script|changed
  tags:
  - drupal

- name: Set robots.txt
  copy: src="{{ search_engine_robots_filename }}" dest="{{ drupal_root }}/robots.txt"
  tags:
  - drupal

- name: Copy default favicon.ico
  copy: src="favicon.ico" dest="{{ drupal_root }}/favicon.ico"
  tags:
  - drupal

- name: Setup drushrc
  copy: src=drushrc.php dest="{{ drupal_root }}/sites/default/drushrc.php" owner=root group=root mode="0644"
  tags:
  - drupal

- name: Download Drupal drush tools
  command: drush dl -y "{{ item }}" chdir="{{ drupal_root }}" creates="{{ ansible_env.HOME }}/.drush/{{ item }}/"
  with_items:
    - drush_extras
    - drush_language
  tags:
  - drupal

- name: Download Drupal modules
  command: drush dl -y "{{ item }}" chdir="{{ drupal_root }}" creates="{{ drupal_root }}/sites/all/modules/{{ item }}/"
  register: download_modules
  with_items:
    - custom_username_validation
    - views
    - features
    - jquery_update

    - node_export
    - menu_block
    - menu_import
    - libraries
    - services
    - services_menu

    - i18n
    - pathauto
    - token
    - transliteration
    - variable
    - ctools
    - i18nviews
    - l10n_update
    - admin_language
    - ckeditor
    - imce
    - features_extra
    - google_analytics

    - views_bootstrap
    - strongarm
    - sharethis

    - date
    - calendar

    - recaptcha
    - honeypot
    - node_expire

    - draggableviews

    - commentsblock

  tags:
  - drupal

- name: Enable Drupal modules
  command: drush en -y "{{ item }}" chdir="{{ drupal_root }}"
  when: download_modules|changed
  with_items:
    - custom_username_validation
    - views
    - features
    - jquery_update

    - node_export
    - menu_block
    - menu_block_export
    - menu_import
    - libraries
    - services
    - services_menu
    - rest_server

    - locale
    - i18n
    - i18n_node
    - i18n_block
    - i18n_menu
    - i18n_field

    - pathauto
    - tokenvariables
    - transliteration
    - variable
    - variable_realm
    - variable_store
    - variable_admin
    - i18n_variable
    - ctools
    - i18nviews
    - l10n_update
    - admin_language
    - ckeditor
    - fe_block
    - imce
    - googleanalytics

    - views_bootstrap
    - strongarm
    - sharethis

    - date
    - date_popup
    - calendar

    - recaptcha
    - honeypot
    - node_expire

    - draggableviews
    - commentsblock

    - variable_translation
    - variable_admin

  tags:
  - drupal


- name: Install YTP modules
  shell: rm -rf "{{ drupal_root }}/sites/all/modules/ytp_{{ item }}" && cp -r "{{ cache_path }}/ytp-drupal-{{ item }}" "{{ drupal_root }}/sites/all/modules/ytp_{{ item }}"
  register: install_ytp_drupal_modules
  with_items:
    - user
    - tutorial
    - footer
    - frontpage
  tags:
  - drupal

- name: Enable YTP modules
  command: drush en -y ytp_{{ item }} chdir="{{ drupal_root }}"
  when: install_ytp_drupal_modules|changed
  with_items:
    - user
    - tutorial
    - footer
    - frontpage
  tags:
  - drupal

- name: Overwrites ckeditor configuration with our custom
  copy: src="{{ item }}" dest="{{ drupal_root }}/sites/all/modules/ckeditor/{{ item }}"
  with_items:
  - "ckeditor.config.js"
  tags:
  - drupal

- include: theme.yml

- include: features.yml

- name: Set default Drupal language
  command: drush language-default fi chdir="{{ drupal_root }}"
  tags:
  - drupal-configuration
  - drupal

- name: Copy drush variable import script and variables json
  copy: src={{ item.src }} dest={{ item.dest }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }}
  with_items:
    - { src: 'multiple-variables.drush', dest: '{{ scripts_path }}/multiple-variables.drush', owner: 'root', group: 'root', mode: '0750' }
    - { src: 'drupal.json', dest: '{{ cache_path }}/drupal.json', owner: 'root', group: 'root', mode: '0600'}
  register: drush_variables
  tags:
  - drupal-configuration
  - drupal

- name: Set Drupal variables from file
  command: "drush {{ scripts_path }}/multiple-variables.drush {{ cache_path }}/drupal.json chdir={{ drupal_root }}"
  when: drush_variables|changed
  tags:
  - drupal-configuration
  - drupal

- name: Set Drupal variables
  command: drush vset "{{ item.variable }}" "{{ item.value }}" chdir='{{ drupal_root }}'
  with_items:
    - { variable: "site_mail", value: "{{ email_from }}" }
    - { variable: "site_name", value: "{{ drupal_site_name }}" }
    - { variable: "error_level", value: "{{ drupal_error_level }}" }
    - { variable: "date_format_short", value: 'd.m.Y - H:i'}
    - { variable: "jquery_update_jquery_version", value: "1.10" }
    - { variable: "recaptcha_public_key", value: "{{ recaptcha_public_key }}" }
    - { variable: "recaptcha_private_key", value: "{{ recaptcha_private_key }}" }
    - { variable: "captcha_add_captcha_description", value: 0 }
    - { variable: "honeypot_form_user_register_form", value: 1 }
    - { variable: "honeypot_form_user_pass", value: 1 }
  tags:
  - drupal-configuration
  - drupal

- name: Enable email verification
  command: drush vset "user_email_verification" "1" chdir='{{ drupal_root }}'
  when: enable_email_verification != False
  tags:
  - drupal-configuration
  - drupal

- name: Set Drupal remote variables
  command: drush vset "{{ item.variable }}" "{{ item.value }}" chdir='{{ drupal_root }}'
  when: google_analytics != False
  with_items:
    - { variable: "googleanalytics_account", value: "{{ google_analytics.id }}" }
  tags:
  - drupal-configuration
  - drupal
  - non-local

- name: Copy fix scripts
  copy: src={{ item }}.drush dest={{ scripts_path }}/{{ item }}.drush owner=root group=root mode="0750"
  register: copy_fix_scripts
  with_items:
    - fix_language
  tags:
  - drupal-configuration
  - drupal

- name: Apply fix scripts
  command: "drush '{{ scripts_path }}/{{ item }}.drush' chdir='{{ drupal_root }}'"
  when: copy_fix_scripts|changed
  with_items:
    - fix_language
  tags:
  - drupal-configuration
  - drupal

- name: Move blocks
  command: drush block-configure --module={{ item.module }} --delta={{ item.delta }} --region={{ item.region }} --weight={{ item.weight }} chdir="{{ drupal_root }}"
  with_items:
    - { module: locale, delta: language, region: top_navigation, weight: 0 }
    - { module: menu, delta: related-sites, region: content_grid_right, weight: 2} 
    - { module: menu, delta: footer-links, region: footer, weight: 2 }
    - { module: ytp_footer, delta: owner_info, region: footer, weight: 1 }
    - { module: ytp_footer, delta: icons, region: footer, weight: 3 }
    - { module: ytp_frontpage, delta: twitter_feed, region: content_grid_left, weight: 1}
    - { module: ytp_frontpage, delta: latest_datasets, region: content_grid_right, weight: 0} 
    - { module: ytp_frontpage, delta: popular_datasets, region: content_grid_right, weight: 1} 
    - { module: ytp_tutorial, delta: tutorial_block, region: top_bar_secondary, weight: 0 }
    - { module: views, delta: service_alerts_view-block, region: highlighted, weight: 0 }
    - { module: views, delta: news-block, region: content_grid_left, weight: 0}

- name: Disable blocks
  command: drush block-disable --module={{ item.module }} --delta={{ item.delta }} chdir="{{ drupal_root }}"
  with_items:
    - { module: user, delta: login }
    - { module: system, delta: "powered-by" }
    - { module: node, delta: "recent" }
    - { module: "search", delta: "form" }
    - { module: "system", delta: "navigation" }
  tags:
  - drupal-configuration
  - drupal

- include: translations.yml

- name: Ensure PHP-FPM is restarted
  service: name=php5-fpm state=restarted
  tags:
  - drupal

- include: roles.yml

- name: Add default editor user
  command: drush user-create "{{ item.username }}" --mail="{{ item.email }}" --password="{{ item.password }}" chdir="{{ drupal_root }}"
  ignore_errors: True
  with_items: ytp_users
  tags:
  - drupal

- name: Set user roles
  command: drush user-add-role "{{ item.role }}" --name="{{ item.username }}" chdir="{{ drupal_root }}"
  with_items: drupal_roles
  tags:
  - drupal

- name: Copy custom cancel script
  copy: src="{{ item }}" dest="{{ drupal_root }}/{{ item }}" owner="root" group="root" mode="0644"
  with_items:
    - "cancel-user.php"
  tags:
  - drupal

- name: Create upload paths
  file: path={{ drupal_files_path }}/{{ item }} owner={{ www_user }} group={{ www_group }} mode="0775" state="directory"
  register: create_upload_paths
  with_items:
    - ""
    - styles
    - images
    - documents
  tags:
  - drupal

- name: Copy htaccess file
  template: src=uploaded_files_htaccess.j2 dest="{{ drupal_files_path }}/.htaccess" mode="0644" owner=root group=root
  tags:
  - drupal

- name: Remove default Drupal file upload path
  file: path="{{ drupal_root }}/sites/default/files" state=absent
  tags:
  - drupal

- name: Symlink file upload paths
  file: path="{{ drupal_root }}/sites/default/files" src="{{ drupal_files_path }}" state=link force=yes
  tags:
  - drupal

- name: Ensure correct permission for Drupal upload directory
  shell: chown -R "{{ www_user }}:{{ www_group }}" "{{ drupal_files_path }}"
  when: create_upload_paths|changed
  tags:
  - drupal

- name: Update Drupal
  command: drush -y --backup-dir="{{ backup_path }}" up chdir="{{ drupal_root }}"
  tags:
  - drupal

- name: Clear Drupal cache
  command: drush cache-clear all -y chdir="{{ drupal_root }}"
  tags:
  - drupal

- name: Update Drupal translations
  shell: drush l10n-update-refresh && drush -y l10n-update chdir="{{ drupal_root }}"
  async: 1200
  poll: 0
  tags:
  - drupal
  - drupal-translations
