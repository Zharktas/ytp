---

- name: Clear cache directory
  file: path="{{ cache_path }}" state=absent
  when: clear_all_cache
  tags:
  - common
  - clear-cache

- include: timezone.yml

- name: Set hostname
  template: src=hostname.j2 dest="/etc/hostname" mode=0644 owner=root group=root
  register: hostname_update
  tags:
  - common
  - non-local
  - has-hostname

- name: Update hostname
  command: service hostname start
  when: hostname_update|changed
  tags:
  - common
  - non-local
  - has-hostname

- name: Copy environment
  template: src=environment.j2 dest="/etc/environment" mode=0644 owner=root group=root
  tags:
  - common

- name: Reboot weekly on Sundays
  cron: name="reboot" weekday="0" minute="0" hour="5" job="/sbin/shutdown -r +5"
  tags:
  - non-local
  - ckan
  - cron

- name: Copy apt sources.list
  template: src=sources.list.j2 dest=/etc/apt/sources.list mode=0644 owner=root group=root
  when: apt_source_url != false
  tags:
  - packages
  - common


- name: Add nodejs repository
  apt_repository: repo='ppa:chris-lea/node.js'
  tags:
  - packages
  - common


- name: Update package cache
  apt: update_cache=yes
  tags:
  - packages
  - common

- name: Update packages
  apt: upgrade=dist
  tags:
  - packages
  - non-local
  - common

- name: sshd configuration file update
  template: src=sshd_config.j2 dest="/etc/ssh/sshd_config" 
    mode=0644 owner=root group=root
    backup=yes validate='/usr/sbin/sshd -T -f %s'
  tags:
  - non-local
  - common
  notify:
  - restart sshd

- name: Ensure ansible requirements
  action: apt pkg="{{ item }}" state=latest
  with_items:
    - python-psycopg2
    - python-virtualenv
  tags:
  - packages
  - common

# TODO: Move this to roles where packages are used even those are duplicate
- name: Ensure common packages
  action: apt pkg="{{ item }}" state=latest
  with_items:
    - libpq5
    - git-core
    - unzip
    - gettext
    - build-essential
    - nodejs
  tags:
  - packages
  - common

- name: Upgrade npm
  command: 'npm -g install npm@2.1.12'
  tags:
  - packages
  - common


# TODO: Move path creation where paths are used even those are duplicate
- name: Create common paths
  file: path="{{ item }}" state=directory
  with_items: all_paths
  tags:
  - common

