---

- name: Install postgresql
  action: apt pkg="{{ item }}" state=latest
  with_items:
    - postgresql-9.5
  tags:
  - packages
  - database

# TODO These should be replaced with lineinfile or ini_file modules if possible
- name: Copy Postgresql configurations
  action: template src={{ item.file }} dest={{ item.dest }} owner=postgres group=postgres mode="0640"
  with_items:
  - { file: pg_hba.conf.j2, dest: /etc/postgresql/9.5/main/pg_hba.conf }
  - { file: postgresql.conf.j2, dest: /etc/postgresql/9.5/main/postgresql.conf }
  tags:
  - database

- name: Generate self-signed SSL certificate
  command: openssl req -new -nodes -x509 -subj "/C=FI/ST=Helsinki/L=Helsinki/O=IT/CN={{ hostname }}" -days 3650 -keyout "/var/lib/postgresql/9.5/main/server.key" -out "/var/lib/postgresql/9.5/main/server.crt" -extensions v3_ca creates="/var/lib/postgresql/9.5/main/server.crt"
  tags:
    - database

- name: Set certificate file ownership and mode
  shell: chmod 600 /var/lib/postgresql/9.5/main/server.* && chown "postgres:postgres" /var/lib/postgresql/9.5/main/server.*
  tags:
      - database


- name: Restart postgres
  service: name=postgresql state=restarted
  tags:
  - database

- name: Setup Postgresql users
  become_user: postgres
  postgresql_user: user={{ item.user }} password={{ item.password }}
  with_items:
  - { user: "{{ ckan_database_username }}", password: "{{ ckan_database_password }}" }
  - { user: "{{ datastore_database_username }}", password: "{{ datastore_database_password }}" }
  - { user: "{{ datastore_username }}", password: "{{ datastore_password }}" }
  - { user: "{{ drupal_database_username }}", password: "{{ drupal_database_password }}" }
  tags:
  - database

- name: Setup Postgresql databases
  sudo_user: postgres
  postgresql_db: "name={{ item.name }} owner={{ item.owner }} encoding={{ item.encoding }} lc_collate={{ item.collate }} lc_ctype={{ item.ctype }} template={{ item.template }}"
  with_items:
  - { name: "{{ ckan_database_name }}", owner: "{{ ckan_database_username }}", encoding: 'UTF-8', collate: 'en_US.UTF-8', ctype: 'en_US.UTF-8', template: 'template0' }
  - { name: "{{ datastore_database_name }}", owner: "{{ datastore_database_username }}", encoding: 'UTF-8', collate: 'en_US.UTF-8', ctype: 'en_US.UTF-8', template: 'template0' }
  - { name: "{{ drupal_database_name }}", owner: "{{ drupal_database_username }}", encoding: 'UTF-8', collate: 'en_US.UTF-8', ctype: 'en_US.UTF-8', template: 'template0' }
  ignore_errors: True
  tags:
  - database

- name: Ensure spatial requirements
  apt: pkg="{{ item }}" state=present
  register: postgis_installed
  with_items:
    - postgresql-9.5-postgis-2.2
  tags:
  - packages
  - spatial

- name: Spatial table references
  command: sudo -u postgres psql -d "{{ ckan_database_name }}" -f "{{ item }}"
  when: postgis_installed|changed
  with_items:
    - "/usr/share/postgresql/9.5/contrib/postgis-2.2/postgis.sql"
    - "/usr/share/postgresql/9.5/contrib/postgis-2.2/spatial_ref_sys.sql"
  tags:
  - spatial

- name: Spatial table rights
  command: sudo -u postgres psql -d "{{ ckan_database_username }}" -c "{{ item }}"
  when: postgis_installed|changed
  with_items:
    - "ALTER TABLE spatial_ref_sys OWNER TO {{ ckan_database_username }};"
    - "ALTER TABLE geometry_columns OWNER TO {{ ckan_database_username }};"
  tags:
  - spatial

- name: Datastore rights
  sudo_user: postgres
  command: psql -d "{{ datastore_database_name }}" -c "{{ item }}"
  with_items:
    - "REVOKE CREATE ON SCHEMA public FROM PUBLIC;"
    - "REVOKE USAGE ON SCHEMA public FROM PUBLIC;"
    - "GRANT CREATE ON SCHEMA public TO \"{{ ckan_database_username }}\";"
    - "GRANT USAGE ON SCHEMA public TO \"{{ ckan_database_username }}\";"
    - "GRANT CREATE ON SCHEMA public TO \"{{ datastore_database_username }}\";"
    - "GRANT USAGE ON SCHEMA public TO \"{{ datastore_database_username }}\";"
    - "REVOKE CONNECT ON DATABASE \"{{ ckan_database_name }}\" FROM \"{{ datastore_username }}\";"
    - "GRANT CONNECT ON DATABASE \"{{ datastore_database_name }}\" TO \"{{ datastore_username }}\";"
    - "GRANT USAGE ON SCHEMA public TO \"{{ datastore_username }}\";"
    - "GRANT SELECT ON ALL TABLES IN SCHEMA public TO \"{{ datastore_username }}\";"
    - "ALTER DEFAULT PRIVILEGES FOR USER \"{{ datastore_database_username }}\" IN SCHEMA public GRANT SELECT ON TABLES TO \"{{ datastore_username }}\";"
  tags:
  - database
  - datastore

- name: Install database backup tools
  action: apt pkg="{{ item }}" state="present"
  with_items:
  - autopostgresqlbackup
  - mailutils
  tags:
  - database
  - backup
  - non-local

- name: Setup pre backup script
  copy: src=pre-backup.bash dest="{{ scripts_path }}/pre-backup.bash" mode="0755" owner=root group=root
  tags:
  - database
  - backup
  - non-local

- name: Setup database backup
  template: src=autopostgresqlbackup.j2 dest=/etc/default/autopostgresqlbackup mode="0755" owner=root group=root
  tags:
  - database
  - backup
  - non-local

- name: Run backup now
  command: /usr/sbin/autopostgresqlbackup
  tags:
  - database
  - backup
  - non-local

- name: Copy backup cleanup
  template: src=clean_backups.sh.j2 dest="/etc/cron.daily/ytp_clean_backups" mode="0755" owner=root group=root
  tags:
  - database
  - backup
  - non-local
