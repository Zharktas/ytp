<?php
/*
 ****************************
 * YTP Drupal user plugin inserts content from ckan to the drupal instance on 
 * avoindata.fi service
 ****************************
 */
function create_ytp_user_service($endpoint){

	$endpoint->api_version = 3;
	$endpoint->disabled = FALSE;
	$endpoint->name = 'user_service_name';
	$endpoint->server = 'rest_server';
	$endpoint->path = 'user_2';
	$endpoint->authentication = array();
	$endpoint->authentication['services'] ='services';
	$endpoint->resources = array();
	$user = array();
  	$operations=array();
	$retrieve =array();
	$update  =array();
	$index =array();
	$enabled =array();
	$enabled['enabled'] = '1';
	$retrieve['enabled'] = $enabled;
	$update['enabled'] = $enabled;
	$index['enabled'] = $enabled;
	$operations['retrieve'] = $retrieve;
	$operations['update'] = $update;
	$operations['index']= $index;
	$user['operations'] =$operations;
	$actions=array();
	$token=array();
	$token['enabled']=$enabled;
	$actions['token']=$token;
  	$user['actions']=$actions;
  	$endpoint->resources['user'] = $user;
	$endpoint->debug = 1;
	return $endpoint;
}
 

function ytp_user_enable() {

  // Check if our field is not already created.
  if (!field_info_field('field_fullname')) {
    $field = array(
        'field_name' => 'field_fullname', 
        'type' => 'text', 
        'cardinality' => 1,
    	'translatable' => FALSE, 
    );
    field_create_field($field);

    // Create the instance on the bundle.
    $instance = array(
        'field_name' => 'field_fullname', 
        'entity_type' => 'user', 
        'label' => 'Fullname', 
        'bundle' => 'user', 
        // If you don't set the "required" property then the field wont be required by default.
        'required' => FALSE,
        'settings' => array(
           // Here you inform either or not you want this field showing up on the registration form.
            'user_register_form' => 0,
        ),
        'widget' => array(
            'type' => 'textfield',
            'weight' => '1',
        ), 
    );
    field_create_instance($instance);
	drupal_set_message($field['field_fullname'].' was created.');
  }

  //field for ckan api key
  if (!field_info_field('field_ckan_api_key')){
    $apikey_field = array(
      'field_name' => 'field_ckan_api_key',
      'type' => 'text',
      'cardinality' => 1,
      'translatable' => FALSE
    );

    field_create_field($apikey_field);

    $apikey_instance = array(
      'field_name' => 'field_ckan_api_key',
      'entity_type' => 'user',
      'bundle' => 'user',
      'settings' => array(
        'user_register_form' => 0
      ),
      'widget' => array(
        'type' => 'textfield',
        'weight' => '1',
      )
    );

    field_create_instance($apikey_instance);
    drupal_set_message($apikey_field['field_name'] . ' was created.');
  }

  $endpoint = services_endpoint_new();
  $endpoint = create_ytp_user_service($endpoint);
  if ( services_endpoint_load('user_service_name') == FALSE ){
  	services_endpoint_save($endpoint); 
  }
  
}
function ytp_user_disable(){
	global $ytp_user_service_name;
	$endpoint = services_endpoint_load('user_service_name');
	if ($endpoint != FALSE){
		services_endpoint_delete($endpoint);
	}
}

