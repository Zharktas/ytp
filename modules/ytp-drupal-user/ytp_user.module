<?php
/*
 ****************************
 * YTP Drupal user plugin inserts content from ckan to the drupal instance on
 * avoindata.fi service
 ****************************
 */
function create_ytp_user_service($endpoint){

    $endpoint->api_version = 3;
    $endpoint->disabled = FALSE;
    $endpoint->name = 'user_service_name';
    $endpoint->server = 'rest_server';
    $endpoint->path = 'user_2';
    $endpoint->authentication = array();
    $endpoint->authentication['services'] ='services';
    $endpoint->resources = array();
    $user = array();
    $operations=array();
    $retrieve =array();
    $update  =array();
    $index =array();
    $enabled =array();
    $enabled['enabled'] = '1';
    $retrieve['enabled'] = $enabled;
    $update['enabled'] = $enabled;
    $index['enabled'] = $enabled;
    $operations['retrieve'] = $retrieve;
    $operations['update'] = $update;
    $operations['index']= $index;
    $user['operations'] =$operations;
    $actions=array();
    $token=array();
    $token['enabled']=$enabled;
    $actions['token']=$token;
    $user['actions']=$actions;
    $endpoint->resources['user'] = $user;
    $endpoint->debug = 1;
    return $endpoint;
}


function ytp_user_enable() {

  // Check if our field is not already created.
  if (!field_info_field('field_fullname')) {
    $field = array(
        'field_name' => 'field_fullname',
        'type' => 'text',
        'cardinality' => 1,
        'translatable' => FALSE,
    );
    field_create_field($field);

    // Create the instance on the bundle.
    $instance = array(
        'field_name' => 'field_fullname',
        'entity_type' => 'user',
        'label' => 'Fullname',
        'bundle' => 'user',
        // If you don't set the "required" property then the field wont be required by default.
        'required' => FALSE,
        'settings' => array(
           // Here you inform either or not you want this field showing up on the registration form.
            'user_register_form' => 0,
        ),
        'widget' => array(
            'type' => 'textfield',
            'weight' => '1',
        ),
    );
    field_create_instance($instance);
    drupal_set_message($field['field_fullname'].' was created.');
  }

  //field for ckan api key
  if (!field_info_field('field_ckan_api_key')){
    $apikey_field = array(
      'field_name' => 'field_ckan_api_key',
      'type' => 'text',
      'cardinality' => 1,
      'translatable' => FALSE
    );

    field_create_field($apikey_field);

    $apikey_instance = array(
      'field_name' => 'field_ckan_api_key',
      'entity_type' => 'user',
      'bundle' => 'user',
      'settings' => array(
        'user_register_form' => 0
      ),
      'widget' => array(
        'type' => 'textfield',
        'weight' => '1',
      )
    );

    field_create_instance($apikey_instance);
    drupal_set_message($apikey_field['field_name'] . ' was created.');
  }

  $endpoint = services_endpoint_new();
  $endpoint = create_ytp_user_service($endpoint);
  if ( services_endpoint_load('user_service_name') == FALSE ){
      services_endpoint_save($endpoint);
  }

}
function ytp_user_disable(){
    global $ytp_user_service_name;
    $endpoint = services_endpoint_load('user_service_name');
    if ($endpoint != FALSE){
        services_endpoint_delete($endpoint);
    }
}

/**
 * Implements hook_user_login
 *
 * @param $edit The array of form values submitted by the user.
 * @param $account The user object on which the operation was just performed.
 */
function ytp_user_user_login(&$edit, $account) {
    global $language;

    // Using drupal_goto() or overriding $edit['redirect'] do not work if $_GET['destination'] is set, because $_GET['destination] overrides them

    // Redirect only when the user is not resetting her password, otherwise the password reset functionality will be impaired
    if (!isset($_POST['form_id']) || $_POST['form_id'] != 'user_pass_reset') {
        if (isset($_REQUEST['destination']) && $_REQUEST['destination'] !== "user/login") {
            drupal_goto($_REQUEST['destination']);
        } else {
            // Redirect the user to the front page
            unset($_GET['destination']);
            drupal_goto('<front>');
        }
    }
}

/**
 * Implements hook_form_alter
 *
 * @param $form Nested array of form elements that comprise the form
 * @param $form_state A keyed array containing the current state of the form
 * @param $form_id String representing the name of the form itself
 */
function ytp_user_form_alter(&$form, $form_state, $form_id) {
    global $user;

    if (!in_array('administrator', $user->roles) && $form_id === 'user_profile_form') {
        // Hide the fullname, ckan_api_key, picture, language selection (locale), timezone, and text formatting (wysiwyg) fields from the user edit form for
        // all other users than admins.
        // If "$form['field_fullname']['#access'] = FALSE;" or "$form['field_fullname']['#disabled'] = TRUE;" is used, the value won't update from
        // Ckan to Drupal.
        hide($form['field_fullname']);
        hide($form['field_ckan_api_key']);
        hide($form['picture']);
        hide($form['locale']);
        hide($form['timezone']);
        hide($form['wysiwyg']);
    }
}

function ytp_user_user_logout($account) {
    user_cookie_save(array('ytp.logoff' => '1'));
}
